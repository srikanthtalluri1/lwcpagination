@AuraEnabled(cacheable=true)
    public static List<String> getPicklistValues(String objectName, String fieldName) {
        List<String> picklistValues = new List<String>();
        try {
            Schema.SObjectType sObjectType = Schema.getGlobalDescribe().get(objectName);
            if (sObjectType == null) {
                throw new IllegalArgumentException('Invalid object name: ' + objectName);
            }
            Schema.DescribeSObjectResult sObjectDescribe = sObjectType.getDescribe();
            Schema.DescribeFieldResult fieldDescribe = sObjectDescribe.fields.getMap().get(fieldName).getDescribe();

            if (fieldDescribe != null) {
                for (Schema.PicklistEntry entry : fieldDescribe.getPicklistValues()) {
                    picklistValues.add(entry.getLabel());
                }
            } else {
                throw new IllegalArgumentException('Invalid field name: ' + fieldName);
            }
        } catch (Exception e) {
            System.debug('Error retrieving picklist values: ' + e.getMessage());
            throw new AuraHandledException('Error retrieving picklist values: ' + e.getMessage());
        }
        return picklistValues;
    }
