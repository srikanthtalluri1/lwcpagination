public class technologyDecision_CreateFormHelper {
	
    @AuraEnabled
    public static String createDecisionWithRelation(Map<String, Object> decisionFields, 
                                                Map<String, Object> relationFields) {
        // Create TechnologyDecision__c record
        TechnologyDecision__c decision = (TechnologyDecision__c)
            populateFields(new TechnologyDecision__c(), decisionFields);
			try{
				insert decision;
			}
			catch(Exception e){
				return e.getMessage();
			}
        

        // Create TechnologyDecision_Relationship__c record
        TechnologyDecision_Relationship__c relation = (TechnologyDecision_Relationship__c)
            populateFields(new TechnologyDecision_Relationship__c(), relationFields);

        // link relation to decision (adjust field name!)
        //relation.TechnologyDecision__c = decision.Id;
        insert relation;

        return decision.Id;
    }

    // Helper to populate sObject fields dynamically
    private static sObject populateFields(sObject record, Map<String, Object> fieldMap) {
        for (String fieldName : fieldMap.keySet()) {
            try {
                record.put(fieldName, fieldMap.get(fieldName));
            } catch (Exception e) {
                System.debug('Skipping field ' + fieldName + ': ' + e.getMessage());
            }
        }
        return record;
    }
}
