appDomainArray=[];

 addChildrenToFilteredValues() {
           

            this._filteredFieldValues = this._filteredFieldValues.map(filterGroup => {
                return {
                    ...filterGroup,
                    filteredFieldValue: filterGroup.filteredFieldValue.map(parent => {
                        const match = this.appDomainArray.find(
                            cat => this.removeCount(cat.label) === parent.value
                        );

                        return {
                            ...parent,
                            children: match ? match.domains : []
                        };
                    })
                };
            });
            console.log('this._filteredFieldValues 330 ', JSON.stringify(this._filteredFieldValues));
        }

        removeCount(label) {
            return label.replace(/\s*\(\d+\)$/, '');
        }

  this.appDomainArray= data?.['modifedAffectedStandard'];

  if (x !== 'PortfolioDomains' && x !== 'modifedAffectedStandard') {

handleParentCheckboxChangeNew(event){
    const categoryName = event.target.dataset.id;
    const isChecked = event.target.checked;
    console.log('isChecked ', isChecked);
    console.log('categoryName ', categoryName);
    let repeathtmldata=[];
    const selected = [];
    const selectedChilds = [];
    const inputs = this.template.querySelectorAll('[data-name="test12"]');
    const inputsChild = this.template.querySelectorAll('[data-name="test11"]');
       // console.log(inputs.checked);
         
        let methodFilter='';
        let methodFilterChild='';
        inputs.forEach(input => {
            if (input.checked) {
                const result = input.dataset.id.replace(/\s*\(.*?\)\s*/g, '').trim();
                selected.push(result);
                console.log(input.dataset.id);
                
                    methodFilter=result   
            }
        });
        inputsChild.forEach(input => {
            if (input.checked) {
                const result = input.dataset.id.replace(/\s*\(.*?\)\s*/g, '').trim();
                selectedChilds.push(result);
                console.log(input.dataset.id);
                
                    methodFilterChild=result   
            }
        });
        this.filters=[
            {"Affected Standard":selected,
            "uniqueKey":'0-'+selected.join(",")}]
            if(selectedChilds != null){
            this.filters.push({"Domain Standard":selectedChilds,
            "uniqueKey":'0-'+selectedChilds.join(",")});
            } 
            this.rowOffSet=0;
        this.records = [];
        this.fetchData();
}
handleChildCheckboxChangeNew(event) {
    const parentName = event.target.dataset.parent;
    const childId = event.target.dataset.id;
    const isChecked = event.target.checked;
    console.log('childId 2310', childId);
    console.log('parentName 2310', parentName);
    console.log('isChecked 2310', isChecked);
    let selectedChildrenForParent = [];
     const selected = [];
    const selectedChilds = [];
    const inputs = this.template.querySelectorAll('[data-name="test12"]');
    const inputsChild = this.template.querySelectorAll('[data-name="test11"]');
       // console.log(inputs.checked);
         
        let methodFilter='';
        let methodFilterChild='';
        inputs.forEach(input => {
            if (input.checked) {
                const result = input.dataset.id.replace(/\s*\(.*?\)\s*/g, '').trim();
                selected.push(result);
                console.log(input.dataset.id);
                
                    methodFilter=result   
            }
        });
        inputsChild.forEach(input => {
            if (input.checked) {
                const result = input.dataset.id.replace(/\s*\(.*?\)\s*/g, '').trim();
                selectedChilds.push(result);
                console.log(input.dataset.id);
                
                    methodFilterChild=result   
            }
        });
        this.filters=[
            {"Affected Standard":selected,
            "uniqueKey":'0-'+selected.join(",")}]
            if(selectedChilds != null){
            this.filters.push({"Domain Standard":selectedChilds,
            "uniqueKey":'0-'+selectedChilds.join(",")});
            } 
            this.rowOffSet=0;
        this.records = [];
        this.fetchData();
}
