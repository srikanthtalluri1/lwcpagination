<div class="filterContainer">
                        <div if:true={showFilterValues}>
                        <lightning-input label="Search Filter" placeholder="Type to search..." onchange={handleFilterSearch}></lightning-input>
                    <div if:true={showFilterValues} class="slds-card slds-p-top--medium" key={filteredFieldValue.id}
                        for:each={filteredFieldValues} for:item="filteredFieldValue">
                        <div class="slds-grid slds-align--spread slds-wrap">
                            <template if:false={filteredFieldValue.isApplicationStandred}>
                            <div class="slds-col slds-text-title_bold">{filteredFieldValue.filterField}</div>
                             <lightning-button-icon class="slds-col slds-text-align--right"
                                icon-name={filteredFieldValue.icon} size="small" variant="bare" onclick={handleActions}
                                data-action="filterbyexpand" data-index={filteredFieldValue.id}></lightning-button-icon> 
                                </template>
                        </div>
                        
                       {filteredFieldValue.uniqueKey} 
                     
                         
                      <template if:false={filteredFieldValue.isApplicationStandred}>
                       <lightning-checkbox-group if:true={filteredFieldValue.showValues} class="slds-p-bottom_medium"
                            name="filterValue" options={filteredFieldValue.filteredFieldValue}
                            data-action="selectedfiltervalue" data-index={filteredFieldValue.id}
                            onchange={handleActions} value={filteredFieldValue.selectedValue}
                            key={filteredFieldValue.uniqueKey}>
                        </lightning-checkbox-group>
                        </template>
                     <!--   <template for:each={filteredFieldValue.filteredFieldValue} for:item="category"> 
                            <lightning-checkbox-group  class="slds-p-bottom_medium"
                            name="filterValue" options={category.subOption}
                            data-action="selectedfiltervalue" data-index={filteredFieldValue.id}
                            onchange={handleActions} value={filteredFieldValue.selectedValue}
                            key={filteredFieldValue.uniqueKey}>
                        </lightning-checkbox-group>
                        </template> 
                            <template for:each={category.subOption} for:item="child">
                                <div key={child.id} class="slds-m-left_large slds-m-top_xx-small">
                                <lightning-input
                                    id="test11"
                                    type="checkbox"
                                    label={child.name}
                                    data-parent={category.label}
                                    data-id={child.id}
                                    checked={child.checked}
                                    onchange={handleChildCheckboxChange}>
                                </lightning-input>
                                </div>
                                 
                                  </template>
                                   </template> -->
                        <template if:true={filteredFieldValue.isApplicationStandred}>
                         <template for:each={filteredFieldValue.filteredFieldValue} for:item="category">
                            <div key={category.id} >
                            <lightning-input
                            data-name="test12"
                            type="checkbox"
                            label={category.label}
                            data-id={category.label}
                            checked={category.checked}
                            onchange={handleParentCheckboxChange}>
                            </lightning-input>

                            <template if:true={category.checked}> 
                               <template for:each={category.checkboxArray} for:item="group">
                                    <div key={group.id} class="slds-m-left_large">
                                      <!--   <p class="slds-text-title_bold">{group.label}</p>
                                       <template for:each={group.values} for:item="item"> -->
                                   
                                            <lightning-input
                                                key={group.id}
                                                type="checkbox"
                                                label={group.label}
                                                data-parent={category.label}
                                                data-id={group.label}
                                                checked={group.checked}
                                                onchange={handleChildCheckboxChange}>
                                            </lightning-input>
                                      <!--  </template> -->
                                    </div>
                                </template>
                            </template> 

                          <!--  <template if:true={category.checked} //Earler code for showing domain> 
                            <template for:each={category.subOption} for:item="child">
                                <div key={child.id} class="slds-m-left_large slds-m-top_xx-small">
                                <lightning-input
                                    id="test11"
                                    type="checkbox"
                                    label={child.name}
                                    data-parent={category.label}
                                    data-id={child.id}
                                    checked={child.checked}
                                    onchange={handleChildCheckboxChange}>
                                </lightning-input>
                                </div>
                            </template>
                            </template> -->
                             </div>
                            </template>
                        </template>
